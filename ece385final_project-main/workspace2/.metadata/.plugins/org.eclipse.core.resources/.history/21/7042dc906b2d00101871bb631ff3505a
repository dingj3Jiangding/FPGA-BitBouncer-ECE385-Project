#include <stdint.h>
#include "obs.h"
#include "map.h"

// 0x00 = background
// 0x01 = outer rays (dark orange)
// 0x02 = middle rays (orange)
// 0x03 = inner rays (light orange)
// 0x04 = center (bright yellow/white)
uint8_t statiobs_black_img[OBS_WIDTH * OBS_HEIGHT] = {
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 1
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 2
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 3
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 4
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 5
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 6
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 7
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 8
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 9
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 10
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 11
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 12
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 13
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 14
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 15
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 16
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 17
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 18
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 19
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 20
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 21
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 22
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 23
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 24
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 25
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 26
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 27
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 28
    0x09, 0x09, 0x09, 0x09, 0x09, // Row 29
    0x09, 0x09, 0x09, 0x09, 0x09  // Row 30
};


void draw_pixel(uint16_t x, uint16_t y, uint8_t color, BRAM_t* hdmi_ctrl) {
    if (x >= COLUMNS || y >= ROWS) return;

    uint32_t addr = y * (COLUMNS / 2) + (x / 2);
    uint8_t old = hdmi_ctrl->VRAM[addr];

    if (x % 2 == 0) {
        old = (old & 0x0F) | (color << 4);
    } else {
        old = (old & 0xF0) | (color & 0x0F);
    }

    hdmi_ctrl->VRAM[addr] = old;
}


void draw_static_obs(uint16_t x, uint16_t y, BRAM_t* hdmi_ctrl) {
    for (uint16_t j = 0; j < OBS_HEIGHT; j++) {
        for (uint16_t i = 0; i < OBS_WIDTH; i++) {
            uint8_t pixel = statiobs_black_img[j * OBS_WIDTH + i];
            if (pixel != 0) {
                draw_pixel(x + i, y + j, pixel, hdmi_ctrl);  // transparent
            }
        }
    }
}

void clear_static_obs(uint16_t x, uint16_t y, BRAM_t* hdmi_ctrl) {
    for (uint16_t j = 0; j < OBS_HEIGHT; j++) {
        for (uint16_t i = 0; i < OBS_WIDTH; i++) {
            uint8_t pixel = statiobs_black_img[j * OBS_WIDTH + i];
            if (pixel != 0) {
                draw_pixel(x + i, y + j, 0, hdmi_ctrl);  // transparent
            }
        }
    }
}
