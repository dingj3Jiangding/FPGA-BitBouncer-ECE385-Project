# Xilinx SDK Makefile for Microblaze

# Compiler and flags
CC = mb-gcc
LD = mb-gcc
SIZE = mb-size
OBJCOPY = mb-objcopy
OBJDUMP = mb-objdump

# Include directories
INCLUDE_DIRS = \
    -I. \
    -I../../include \
    -I../../include/lw_usb \
    -I$(XILINX_SDK)/data/embeddedsw/lib/bsp/standalone/src/microblaze

# Compiler flags
CFLAGS = -Wall -O2 -c -fmessage-length=0 -mlittle-endian -mxl-barrel-shift -mxl-pattern-compare \
         -mcpu=v10.0 -mno-xl-soft-mul -Wl,--no-relax -ffunction-sections -fdata-sections \
         $(INCLUDE_DIRS)

# Linker flags
LDFLAGS = -Wl,-T -Wl,lscript.ld -Wl,--gc-sections

# Libraries
LIBS = -Wl,--start-group,-lxil,-lgcc,-lc,--end-group

# Source files
SOURCES = \
    main.c \
    player.c \
    map.c \
    game_timer.c \
    lw_usb/MAX3421E.c \
    lw_usb/USB.c \
    lw_usb/transfer.c \
    lw_usb/HID.c \
    platform.c

# Object files
OBJECTS = $(SOURCES:.c=.o)

# Executable name
EXECUTABLE = mb_final.elf

# Default target
all: $(EXECUTABLE)

# Linking
$(EXECUTABLE): $(OBJECTS)
	@echo 'Building target: $@'
	@echo 'Invoking: MicroBlaze gcc linker'
	$(LD) $(LDFLAGS) -o $@ $(OBJECTS) $(LIBS)
	@echo 'Finished building target: $@'
	$(SIZE) $@

# Compiling
%.o: %.c
	@echo 'Compiling file: $<'
	$(CC) $(CFLAGS) -o $@ $<
	@echo 'Finished compiling: $<'

# Clean
clean:
	rm -f $(OBJECTS) $(EXECUTABLE)

.PHONY: all clean